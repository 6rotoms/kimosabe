name: default
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: test-backend
  depends_on: [ clone ]
  image: openjdk:11-jdk-slim
  commands:
  - cd ./api
  - ./mvnw clean install
  - ./mvnw test -P it

- name: test-frontend
  depends_on: [ clone ] 
  image: mhart/alpine-node:12.18.4
  commands:
  - cd ./ui
  - npm install
  - npm run-script lint
  - npm test -- --watchAll=false

services:
- name: db
  image: postgres:13-alpine
  environment:
    POSTGRES_DB: kimosabe
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: admin

- name: redis
  image: redislabs/redisearch:latest

- name: populate-redis
  image: 6rotom/igdb-pdt:latest
  environment:
    REDIS_HOST: redis

- name: mailhog
  image: mailhog/mailhog:latest 

trigger:
  branch:
  - master
  event:
  - pull_request

---
name: deploy-dev
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: build-backend
  depends_on: [ clone ]
  image: openjdk:11-jdk-slim
  commands:
  - mkdir -p target
  - cd ./api
  - ./mvnw clean install
  - cp ./target/*.jar ../target
  - cp ../ssh-compose.yml ../target

- name: build-frontend
  depends_on: [ clone ]
  image: mhart/alpine-node:12.18.4
  commands:
  - mkdir -p target
  - cd ./ui
  - npm install
  - npm run-script build
  - cp -r ./build ../target

- name: deploy
  image: appleboy/drone-scp
  depends_on: [ build-frontend, build-backend ]
  settings:
    host:
      from_secret: host_address
    username:
      from_secret: username
    key:
      from_secret: ssh_key
    port: 22
    target: /var/www/kimosabe
    source: target

- name: run
  image: appleboy/drone-ssh
  depends_on: [ deploy ]
  settings:
    host:
      from_secret: host_address
    username:
      from_secret: username
    key:
      from_secret: ssh_key
    port: 22
    script:
    - sudo systemctl stop kimosabe-api.service
    - cd /var/www/kimosabe/target
    - docker-compose -f ssh-compose.yml down 
    - docker-compose -f ssh-compose.yml pull
    - docker-compose -f ssh-compose.yml up -d
    - sudo systemctl restart kimosabe-api.service
    - echo "env updated $(date)" >> ~/drone-pipe

trigger:
  branch:
  - master
  event:
  - push

